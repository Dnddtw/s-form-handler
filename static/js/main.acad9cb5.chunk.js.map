{"version":3,"sources":["assets/images/loader.svg","components/Loader/index.js","components/Form/FormComponents.js","components/Form/Forms.js","components/Form/index.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","react_default","a","createElement","className","src","loader","alt","FormLabel","props","htmlFor","concat","name","children","InputInvalidText","_getElementValues","formID","_props$required","required","handleInputChange","formElementData","getFormElementValues","value","ifError","valueInvalid","forName","InputEmail","_getElementValues2","FormComponents_FormLabel","type","onChange","event","id","autoComplete","FormComponents_InputInvalidText","InputPassword","_getElementValues3","InputPasswordWithLink","_getElementValues4","href","FormTitle","FormSubmitButton","FormAdditional","togglePopupForms","onClick","FormSelect","_getElementValues5","FormTermOfUse","_getElementValues6","_getInputProps","FormSignin","inputComponentProps","_props$submitResponse","submitResponse","toggleValidAvailable","onSubmit","disabled","FormComponents_FormTitle","FormComponents_InputEmail","Object","assign","FormComponents_InputPasswordWithLink","FormComponents_FormSubmitButton","FormComponents_FormAdditional","components_Loader","FormSignup","_props$submitResponse2","FormComponents_InputPassword","FormComponents_FormSelect","FormComponents_FormTermOfUse","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","element","target","checked","thisFormsData","state","formsData","formData","isValidAvailable","validHandler","setState","objectSpread","defineProperty","preventDefault","onSubmitValidThisForm","validedData","entries","forEach","_ref","_ref2","slicedToArray","fakeSubmitLoading","filter","_ref3","_ref4","length","setTimeout","validEmail","validPassword","errorMessage","email","empty","test","invalid","password","hasOwnProperty","formSwitch","_getPropsForForm","_assertThisInitialize","assertThisInitialized","signin","signup","repeatPassword","citizenship","termOfUse","formProps","form","Forms_FormSignup","Forms_FormSignin","Component","App","components_Form","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.acad9cb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.283aae5e.svg\";","import React from 'react';\r\nimport loader from '../../assets/images/loader.svg';\r\n\r\nconst Loader = () => <div className=\"form__loader\"><img src={loader} alt=\"\" className=\"loader\"/></div>;\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormLabel = props => {\r\n  return (\r\n    <label htmlFor={`${props.name}`} className=\"form__label\"> {props.children} </label>\r\n  );\r\n};\r\n\r\nconst InputInvalidText = props => {\r\n  return <p className=\"form__invalid\"> {props.children} </p>;\r\n};\r\n\r\nfunction _getElementValues(props) {\r\n  // The function gets properties from Form parent and resolve it with form components\r\n  const {\r\n    formID,\r\n    name,\r\n    required = false,\r\n    handleInputChange,\r\n    getFormElementValues\r\n  } = props;\r\n\r\n  const formElementData = getFormElementValues(formID, name);\r\n  const value = formElementData.value;\r\n  const ifError = formElementData.valueInvalid;\r\n\r\n  const forName = `${formID}-${name}`;\r\n\r\n  return {\r\n    formID,\r\n    name,\r\n    required,\r\n    handleInputChange,\r\n    value,\r\n    ifError,\r\n    forName\r\n  };\r\n}\r\n\r\nexport const InputEmail = props => {\r\n  const {\r\n    formID,\r\n    name,\r\n    required,\r\n    handleInputChange,\r\n    value,\r\n    ifError,\r\n    forName\r\n  } = _getElementValues(props);\r\n\r\n  return (\r\n    <div className=\"form__element\">\r\n      <FormLabel name={forName}> {props.children} </FormLabel>\r\n      <input\r\n        type=\"text\"\r\n        onChange={event => handleInputChange(formID, { name }, event)}\r\n        className={`form__input ${ifError ? \"invalid\" : \"\"}`}\r\n        id={forName}\r\n        required={required}\r\n        autoComplete=\"off\"\r\n        name={name}\r\n        value={value}\r\n      />\r\n      {ifError && <InputInvalidText>{ifError}</InputInvalidText>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const InputPassword = props => {\r\n  const {\r\n    formID,\r\n    name,\r\n    required,\r\n    handleInputChange,\r\n    value,\r\n    ifError,\r\n    forName\r\n  } = _getElementValues(props);\r\n\r\n  return (\r\n    <div className=\"form__element\">\r\n      <FormLabel name={forName}> {props.children} </FormLabel>\r\n      <input\r\n        type=\"password\"\r\n        className={`form__input ${ifError ? \"invalid\" : \"\"}`}\r\n        onChange={event => handleInputChange(formID, { name }, event)}\r\n        id={forName}\r\n        required={required}\r\n        autoComplete=\"off\"\r\n        name={name}\r\n        value={value}\r\n      />\r\n      {ifError && <InputInvalidText>{ifError}</InputInvalidText>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const InputPasswordWithLink = props => {\r\n  const {\r\n    formID,\r\n    name,\r\n    required,\r\n    handleInputChange,\r\n    value,\r\n    ifError,\r\n    forName\r\n  } = _getElementValues(props);\r\n\r\n  return (\r\n    <div className=\"form__element\">\r\n      <div className=\"form__flex\">\r\n        <FormLabel name={forName}> {props.children} </FormLabel>\r\n        <a href=\"#\" className=\"form__link\">\r\n          Забыли пароль?\r\n        </a>\r\n      </div>\r\n      <input\r\n        type=\"password\"\r\n        className={`form__input ${ifError ? \"invalid\" : \"\"}`}\r\n        onChange={event => handleInputChange(formID, { name }, event)}\r\n        id={forName}\r\n        required={required}\r\n        autoComplete=\"off\"\r\n        name={name}\r\n        value={value}\r\n      />\r\n      {ifError && <InputInvalidText>{ifError}</InputInvalidText>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormTitle = props => {\r\n  return <h1 className=\"form__title\">{props.children}</h1>;\r\n};\r\n\r\nexport const FormSubmitButton = props => {\r\n  const { formID } = props;\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"form__submit\"\r\n      >\r\n        {props.children}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormAdditional = props => {\r\n  const { togglePopupForms } = props;\r\n\r\n  return (\r\n    <div className=\"popup__additional\">\r\n      <button className=\"popup__link\" onClick={togglePopupForms}> {props.children} </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormSelect = props => {\r\n  const {\r\n    formID,\r\n    name,\r\n    required,\r\n    handleInputChange,\r\n    value,\r\n    forName\r\n  } = _getElementValues(props);\r\n\r\n  return (\r\n    <div className=\"form__element\">\r\n      <FormLabel name={forName}> {props.children} </FormLabel>\r\n      <div className=\"select-container\">\r\n        <select\r\n          name={name}\r\n          id={forName}\r\n          className=\"form__select\"\r\n          required={required}\r\n          onChange={event => handleInputChange(formID, { name }, event)}\r\n          value={value}\r\n        >\r\n          <option value=\"1111\">1111</option>\r\n          <option value=\"2222\">2222</option>\r\n          <option value=\"3333\">3333</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormTermOfUse = props => {\r\n  const {\r\n    formID,\r\n    name,\r\n    required,\r\n    handleInputChange,\r\n    value,\r\n    forName\r\n  } = _getElementValues(props);\r\n\r\n  return (\r\n    <div className=\"form__element checkbox\">\r\n      <label htmlFor={forName} className=\"checkbox__label\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name={name}\r\n          required={required}\r\n          id={forName}\r\n          autoComplete=\"off\"\r\n          className=\"checkbox__checkbox\"\r\n          onChange={event => handleInputChange(formID, { name }, event)}\r\n          value={value}\r\n        />\r\n        <span className=\"checkbox__checkmark\" /> {props.children}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InputPropTypes = {\r\n\tformID: PropTypes.string.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\thandleInputChange: PropTypes.func.isRequired,\r\n\tgetFormElementValues: PropTypes.func.isRequired,\r\n\trequired: PropTypes.string\r\n}\r\n\r\nInputEmail.propTypes = { ...InputPropTypes };\r\nInputPassword.propTypes = { ...InputPropTypes };\r\nInputPasswordWithLink.propTypes = { ...InputPropTypes };\r\nFormSelect.propTypes = { ...InputPropTypes };\r\nFormTermOfUse.propTypes = { ...InputPropTypes };\r\n\r\nFormSubmitButton.propTypes = {\r\n\tformID: PropTypes.string.isRequired\r\n};\r\n\r\nFormAdditional.propTypes = {\r\n\ttogglePopupForms: PropTypes.func.isRequired\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"../Loader\";\r\nimport {\r\n  FormTitle,\r\n  InputEmail,\r\n  InputPassword,\r\n  FormSubmitButton,\r\n  FormAdditional,\r\n  FormTermOfUse,\r\n  InputPasswordWithLink,\r\n  FormSelect\r\n} from \"./FormComponents\";\r\n\r\nfunction _getInputProps(props) {\r\n  const {\r\n    formID,\r\n    handleInputChange,\r\n    value,\r\n    ifError,\r\n    getFormElementValues\r\n\t} = props;\r\n\t\r\n  return {\r\n    formID,\r\n    handleInputChange,\r\n    getFormElementValues,\r\n    value,\r\n    ifError\r\n  };\r\n}\r\n\r\nconst FormSignin = props => {\r\n\tconst inputComponentProps = _getInputProps(props);\r\n  const {\r\n    formID,\r\n    togglePopupForms,\r\n    submitResponse = true,\r\n    toggleValidAvailable\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"form form__container\">\r\n      <form\r\n        className=\"form__sign-in\"\r\n        onSubmit={event => toggleValidAvailable(formID, event)}\r\n      >\r\n        <fieldset disabled={submitResponse}>\r\n          <FormTitle>Вход в систему</FormTitle>\r\n          <InputEmail {...inputComponentProps} name=\"email\">\r\n            Электронная почта\r\n          </InputEmail>\r\n\r\n          <InputPasswordWithLink {...inputComponentProps} name=\"password\">\r\n            Пароль\r\n          </InputPasswordWithLink>\r\n\r\n          <FormSubmitButton formID={formID}> Войти </FormSubmitButton>\r\n          <FormAdditional togglePopupForms={togglePopupForms}>\r\n            Зарегистрироваться\r\n          </FormAdditional>\r\n\r\n          {submitResponse && <Loader />}\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormSignup = props => {\r\n\tconst inputComponentProps = _getInputProps(props);\r\n  const {\r\n    formID,\r\n    togglePopupForms,\r\n    submitResponse = true,\r\n    toggleValidAvailable\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"form form__container\">\r\n      <form\r\n        className=\"form__sign-up\"\r\n        onSubmit={event => toggleValidAvailable(formID, event)}\r\n      >\r\n        <fieldset disabled={submitResponse}>\r\n          <FormTitle>Регистрация в системе</FormTitle>\r\n          <InputEmail {...inputComponentProps} required=\"required\" name=\"email\">\r\n            Электронная почта\r\n          </InputEmail>\r\n\r\n          <InputPassword\r\n            {...inputComponentProps}\r\n            required=\"required\"\r\n            name=\"password\"\r\n          >\r\n            Пароль\r\n          </InputPassword>\r\n\r\n          <InputPassword\r\n            {...inputComponentProps}\r\n            required=\"required\"\r\n            name=\"repeatPassword\"\r\n          >\r\n            Повторите пароль\r\n          </InputPassword>\r\n\r\n          <FormSelect\r\n            {...inputComponentProps}\r\n            required=\"required\"\r\n            name=\"citizenship\"\r\n          >\r\n            Гражданство\r\n          </FormSelect>\r\n\r\n          <FormTermOfUse\r\n            {...inputComponentProps}\r\n            required=\"required\"\r\n            name=\"termOfUse\"\r\n          >\r\n            Соглашаюсь с{\" \"}\r\n            <a href=\"#\" className=\"text-blue\">\r\n              правилами и условиями сервиса\r\n            </a>\r\n          </FormTermOfUse>\r\n\r\n          <FormSubmitButton formID={formID}>\r\n            {\" \"}\r\n            Зарегистрироваться{\" \"}\r\n          </FormSubmitButton>\r\n          <FormAdditional togglePopupForms={togglePopupForms}>\r\n            Войти\r\n          </FormAdditional>\r\n\r\n          {submitResponse && <Loader />}\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormPropTypes = {\r\n  formID: PropTypes.string.isRequired,\r\n  togglePopupForms: PropTypes.func.isRequired,\r\n  toggleValidAvailable: PropTypes.func.isRequired,\r\n  submitResponse: PropTypes.bool\r\n};\r\n\r\nFormSignin.propTypes = { ...FormPropTypes };\r\nFormSignup.propTypes = { ...FormPropTypes };\r\n\r\nexport { FormSignin, FormSignup };","import React, { Component } from \"react\";\r\nimport { FormSignin, FormSignup } from \"./Forms\";\r\nimport errorMessage from \"../../text/text.json\";\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitResponse: false,\r\n      formSwitch: true,\r\n      formsData: {\r\n        signin: {\r\n          isValidAvailable: false,\r\n          email: { value: \"\", valueInvalid: \"\" },\r\n          password: { value: \"\", valueInvalid: \"\" }\r\n        },\r\n        signup: {\r\n          isValidAvailable: false,\r\n          email: { value: \"\", valueInvalid: \"\" },\r\n          password: { value: \"\", valueInvalid: \"\" },\r\n          repeatPassword: { value: \"\", valueInvalid: \"\" },\r\n          citizenship: { value: \"\", valueInvalid: \"\" },\r\n          termOfUse: { value: false, valueInvalid: \"\" }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  handleInputChange = (id, element, event) => {\r\n    const target = event.target;\r\n\t\tconst value = target.type === \"checkbox\" ? target.checked : target.value;\r\n\t\t\r\n    const thisFormsData = this.state.formsData;\r\n\t\tconst formData = thisFormsData[id];\r\n\t\tconst { isValidAvailable } = formData;\r\n\t\t\r\n    const name = element.name;\r\n    const valueInvalid = isValidAvailable ? this.validHandler(name, value) : \"\";\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      formsData: {\r\n        ...thisFormsData,\r\n        [id]: {\r\n          ...formData,\r\n          [element.name]: {\r\n            value: value,\r\n            valueInvalid: valueInvalid\r\n          }\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleValidAvailable = (id, event) => {\r\n    // It allows check the inputs changes in real time, when user clicked on submit button\r\n    event.preventDefault();\r\n    const thisFormsData = this.state.formsData;\r\n\r\n    this.setState(\r\n      {\r\n        formsData: {\r\n          ...thisFormsData,\r\n          [id]: {\r\n            ...thisFormsData[id],\r\n            isValidAvailable: true\r\n          }\r\n        }\r\n      }, () => { this.onSubmitValidThisForm(id); });\r\n  };\r\n\r\n  onSubmitValidThisForm = id => {\r\n    // The function replaces inputInvalid message (erros)\r\n    const formsData = this.state.formsData;\r\n    const formData = formsData[id];\r\n    const validedData = {};\r\n\r\n    // It makes a new object with updated inputInvalid (errors)\r\n    Object.entries(formData).forEach(([name, element]) => {\r\n      if (name === \"isValidAvailable\") {\r\n        validedData[name] = element;\r\n      } else {\r\n        element.valueInvalid = this.validHandler(name, element.value);\r\n        Object.assign(validedData, { [name]: element });\r\n      }\r\n    });\r\n\r\n    // It replaces previous formsData[id] with new\r\n    this.setState(\r\n      {\r\n        formsData: {\r\n          ...formsData,\r\n          [id]: validedData\r\n        }\r\n      }, () => { this.fakeSubmitLoading(id); });\r\n  };\r\n\r\n  fakeSubmitLoading = id => {\r\n    const formData = this.state.formsData[id];\r\n\r\n    const canIChangeSubmitResponseState = Object.entries(formData).filter(\r\n      ([name, element]) => {\r\n        if (typeof element !== \"object\" || name === \"citizenship\") { return false; }\r\n\r\n        return element.valueInvalid;\r\n      }\r\n    );\r\n\r\n    if (canIChangeSubmitResponseState.length === 0) {\r\n      this.setState({ submitResponse: true },\r\n        () => {\r\n          setTimeout(() => {\r\n            this.setState({\r\n              submitResponse: false\r\n            });\r\n          }, 2500);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  validHandler = (name, value) => {\r\n    // General valid handler\r\n    switch (name) {\r\n      case \"email\":\r\n\t\t\t\treturn this.validEmail(value);\r\n\t\t\t\t\r\n      case \"password\":\r\n      default:\r\n        return this.validPassword(value);\r\n    }\r\n  };\r\n\r\n  validEmail = value => {\r\n    // Valid function\r\n    const emailValidRegExp = /\\S+@\\S+\\.\\S+/;\r\n\r\n\t\tif (value.length === 0) { return errorMessage.email.empty; } \r\n\t\telse if (!emailValidRegExp.test(value)) { return errorMessage.email.invalid; }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  validPassword = value => {\r\n    // Valid function\r\n    return value.length === 0 ? errorMessage.password.empty : \"\";\r\n  };\r\n\r\n  getFormElementValues = (id, name) => {\r\n    // It transfers a value of input to functional component\r\n    const formData = this.state.formsData[id] ? this.state.formsData[id] : {};\r\n    return formData.hasOwnProperty(name) ? formData[name] : \"\";\r\n  };\r\n\r\n  togglePopupForms = event => {\r\n    // It changes the popups\r\n    event.preventDefault();\r\n    this.setState({\r\n      formSwitch: !this.state.formSwitch\r\n    });\r\n  };\r\n\r\n  _getPropsForForm = () => {\r\n    const {\r\n      handleInputChange,\r\n      getFormElementValues,\r\n      togglePopupForms,\r\n      toggleValidAvailable\r\n    } = this;\r\n\r\n    const { submitResponse } = this.state;\r\n\r\n    return {\r\n      handleInputChange,\r\n      getFormElementValues,\r\n      togglePopupForms,\r\n      toggleValidAvailable,\r\n      submitResponse\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { formSwitch } = this.state;\r\n    const formProps = this._getPropsForForm();\r\n    const form = formSwitch ? (\r\n      <FormSignup formID=\"signup\" {...formProps} />\r\n    ) : (\r\n      <FormSignin formID=\"signin\" {...formProps} />\r\n    );\r\n    return <div className=\"wrapper\">{form}</div>;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport Form from \"./Form\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"popup popup__container\">\r\n        <Form />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App\";\r\n\r\nimport \"./assets/styles/main.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}