{"version":3,"sources":["assets/images/loader.svg","components/Loader/index.js","components/Form/FormComponents.js","components/Form/Forms.js","components/Form/index.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Loader","react_default","a","createElement","className","src","loader","alt","FormLabel","props","htmlFor","concat","name","children","InputInvalidText","_getElementValues","formID","_props$required","required","handleInputChange","formElementData","getFormElementValues","value","ifError","valueInvalid","forName","InputEmail","_getElementValues2","FormComponents_FormLabel","type","onChange","event","id","autoComplete","FormComponents_InputInvalidText","InputPassword","_getElementValues3","InputPasswordWithLink","_getElementValues4","href","FormTitle","FormSubmitButton","toggleValidAvailable","onSubmit","FormAdditional","togglePopupForms","onClick","FormSelect","_getElementValues5","FormTermOfUse","_getElementValues6","_getInputProps","FormSignin","_props$submitResponse","submitResponse","inputComponentProps","disabled","FormComponents_FormTitle","FormComponents_InputEmail","Object","assign","FormComponents_InputPasswordWithLink","FormComponents_FormSubmitButton","FormComponents_FormAdditional","components_Loader","FormSignup","_props$submitResponse2","FormComponents_InputPassword","FormComponents_FormSelect","FormComponents_FormTermOfUse","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","element","target","checked","thisFormsData","state","formsData","formData","isValidAvailable","validHandler","setState","objectSpread","defineProperty","preventDefault","onSubmitValidThisForm","validedData","entries","forEach","_ref","_ref2","slicedToArray","fakeSubmitLoading","filter","_ref3","_ref4","length","setTimeout","validEmail","validPassword","errorMessage","email","empty","test","invalid","password","hasOwnProperty","formSwitch","_getPropsForForm","_assertThisInitialize","assertThisInitialized","signin","signup","repeatPassword","citizenship","termOfUse","formProps","form","Forms_FormSignup","Forms_FormSignin","Component","App","components_Form","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8285d10e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.283aae5e.svg\";","import React from 'react';\r\nimport loader from '../../assets/images/loader.svg';\r\n\r\nconst Loader = () => <div className=\"form__loader\"><img src={loader} alt=\"\" className=\"loader\"/></div>;\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst FormLabel = (props) => {\r\n    return <label htmlFor={`${props.name}`} className=\"form__label\"> {props.children} </label>\r\n}\r\n\r\nconst InputInvalidText = (props) => {\r\n    return <p className=\"form__invalid\"> {props.children} </p>\r\n}\r\n\r\nfunction _getElementValues(props) {\r\n\t\t// The function gets properties from Form parent and resolve it with form components\r\n\t\tconst { formID, name, required = false, handleInputChange, getFormElementValues } = props;\r\n\r\n    const formElementData = getFormElementValues(formID, name);\r\n    const value = formElementData.value;\r\n    const ifError = formElementData.valueInvalid;\r\n\r\n\t\tconst forName = `${formID}-${name}`;\r\n\t\t\r\n\t\treturn ({\r\n\t\t\tformID,\r\n\t\t\tname,\r\n\t\t\trequired,\r\n\t\t\thandleInputChange,\r\n\t\t\tvalue,\r\n\t\t\tifError,\r\n\t\t\tforName\r\n\t\t});\r\n};\r\n\r\nexport const InputEmail = (props) => {\r\n\t\tconst { \r\n\t\t\tformID, \r\n\t\t\tname, \r\n\t\t\trequired, \r\n\t\t\thandleInputChange, \r\n\t\t\tvalue, \r\n\t\t\tifError, \r\n\t\t\tforName \r\n\t\t} = _getElementValues(props);\r\n    \r\n    return (\r\n        <div className=\"form__element\">\r\n            <FormLabel name={forName}> {props.children} </FormLabel>\r\n            <input \r\n                type=\"text\" \r\n                onChange={(event) => handleInputChange(formID, { name }, event)} \r\n                className={`form__input ${ifError ? 'invalid' : ''}`}\r\n                id={forName} \r\n                required={required}\r\n                autoComplete=\"off\"\r\n                name={name}\r\n                value={value}\r\n            />\r\n            {ifError && <InputInvalidText>{ifError}</InputInvalidText>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const InputPassword = (props) => {\r\n\t\tconst { \r\n\t\t\tformID, \r\n\t\t\tname, \r\n\t\t\trequired, \r\n\t\t\thandleInputChange, \r\n\t\t\tvalue, \r\n\t\t\tifError, \r\n\t\t\tforName \r\n\t\t} = _getElementValues(props);\r\n\r\n    return (\r\n        <div className=\"form__element\">\r\n            <FormLabel name={forName}> {props.children} </FormLabel>\r\n            <input \r\n                type=\"password\" \r\n                className={`form__input ${ifError ? 'invalid' : ''}`}\r\n                onChange={(event) => handleInputChange(formID, { name }, event)}\r\n                id={forName} \r\n                required={required}\r\n                autoComplete=\"off\"\r\n                name={name}\r\n                value={value}\r\n            />\r\n            {ifError && <InputInvalidText>{ifError}</InputInvalidText>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const InputPasswordWithLink = (props) => {\r\n\t\tconst { \r\n\t\t\tformID, \r\n\t\t\tname, \r\n\t\t\trequired, \r\n\t\t\thandleInputChange, \r\n\t\t\tvalue, \r\n\t\t\tifError, \r\n\t\t\tforName \r\n\t\t} = _getElementValues(props);\r\n\r\n    return (\r\n        <div className=\"form__element\">\r\n            <div className=\"form__flex\">\r\n                <FormLabel name={forName}> {props.children} </FormLabel>\r\n                <a href=\"#\" className=\"form__link\">Забыли пароль?</a>    \r\n            </div>\r\n            <input \r\n                type=\"password\" \r\n                className={`form__input ${ifError ? 'invalid' : ''}`}\r\n                onChange={(event) => handleInputChange(formID, { name }, event)}\r\n                id={forName} \r\n                required={required}\r\n                autoComplete=\"off\"\r\n                name={name}\r\n                value={value}\r\n            />\r\n            {ifError && <InputInvalidText>{ifError}</InputInvalidText>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const FormTitle = (props) => {\r\n    return <h1 className=\"form__title\">{props.children}</h1>   \r\n};\r\n\r\nexport const FormSubmitButton = (props) => {\r\n    const { formID, toggleValidAvailable } = props;\r\n    \r\n    return (\r\n        <div>\r\n            <button \r\n                type=\"submit\" \r\n                className=\"form__submit\"\r\n                onSubmit={(event) => toggleValidAvailable(formID, event)}>\r\n                {props.children}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const FormAdditional = (props) => {\r\n    const { togglePopupForms } = props;\r\n\r\n    return (\r\n        <div className=\"popup__additional\">\r\n            <button className=\"popup__link\" onClick={togglePopupForms}> {props.children} </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const FormSelect = (props) => {\r\n\t\tconst { \r\n\t\t\tformID, \r\n\t\t\tname, \r\n\t\t\trequired, \r\n\t\t\thandleInputChange, \r\n\t\t\tvalue, \r\n\t\t\tifError, \r\n\t\t\tforName \r\n\t\t} = _getElementValues(props);\r\n\r\n    return (\r\n        <div className=\"form__element\">\r\n            <FormLabel name={forName}> {props.children} </FormLabel>\r\n            <div className=\"select-container\">\r\n                <select \r\n                    name={name} \r\n                    id={forName}  \r\n                    className=\"form__select\"\r\n                    required={required}\r\n                    onChange={(event) => handleInputChange(formID, { name }, event)}\r\n                    value={value}>\r\n                    <option value=\"1111\">1111</option>\r\n                    <option value=\"2222\">2222</option>\r\n                    <option value=\"3333\">3333</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const FormTermOfUse = (props) => {\r\n\t\tconst { \r\n\t\t\tformID, \r\n\t\t\tname, \r\n\t\t\trequired, \r\n\t\t\thandleInputChange, \r\n\t\t\tvalue, \r\n\t\t\tifError, \r\n\t\t\tforName \r\n\t\t} = _getElementValues(props);\r\n\r\n    return (\r\n        <div className=\"form__element checkbox\">\r\n            <label htmlFor={forName} className=\"checkbox__label\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    name={name} \r\n                    required={required}\r\n                    id={forName} \r\n                    autoComplete=\"off\"\r\n                    className=\"checkbox__checkbox\" \r\n                    onChange={(event) => handleInputChange(formID, { name }, event)}\r\n                    value={value}\r\n                />\r\n                <span className=\"checkbox__checkmark\"></span> {props.children}\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\n// export { \r\n//     InputEmail, \r\n//     FormTitle, \r\n//     InputPassword, \r\n//     FormSubmitButton, \r\n//     FormAdditional, \r\n//     InputPasswordWithLink,\r\n//     FormSelect,\r\n//     FormTermOfUse\r\n// };","import React from 'react';\r\nimport Loader from '../Loader';\r\nimport { \r\n    FormTitle, \r\n    InputEmail, \r\n    InputPassword, \r\n    FormSubmitButton, \r\n    FormAdditional, \r\n    FormTermOfUse,\r\n    InputPasswordWithLink,\r\n\t\tFormSelect } from './FormComponents';\r\n\t\t\r\nfunction _getInputProps(props) {\r\n\tconst { formID, handleInputChange, value, ifError, getFormElementValues  } = props;\r\n\treturn ({\r\n\t\tformID, \r\n\t\thandleInputChange, \r\n\t\tgetFormElementValues,\r\n\t\tvalue, \r\n\t\tifError\r\n\t});\r\n}\r\n\r\nconst FormSignin = (props) => {\r\n\t\tconst { formID, togglePopupForms, submitResponse = true, toggleValidAvailable } = props;\t\r\n\t\tconst inputComponentProps = _getInputProps(props);\r\n\r\n    return (\r\n        <div className=\"form form__container\">\r\n            <form className=\"form__sign-in\" onSubmit={(event) => toggleValidAvailable(formID, event)}>\r\n                <fieldset disabled={submitResponse}>\r\n                    <FormTitle>Вход в систему</FormTitle>    \r\n\t\t\t\t\t\t\t\t\t\t<InputEmail \r\n\t\t\t\t\t\t\t\t\t\t\t\t{...inputComponentProps}\r\n                        name=\"email\"> \r\n                        Электронная почта \r\n                    </InputEmail>\r\n\r\n                    <InputPasswordWithLink\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...inputComponentProps}\r\n                        name=\"password\"> \r\n                        Пароль\r\n                    </InputPasswordWithLink>\r\n\r\n                    <FormSubmitButton formID={formID}> Войти </FormSubmitButton>\r\n                    <FormAdditional togglePopupForms={togglePopupForms}>Зарегистрироваться</FormAdditional> \r\n\r\n                    {submitResponse && <Loader />}   \r\n                </fieldset>   \r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst FormSignup = (props) => {\r\n\tconst { formID, togglePopupForms, submitResponse = true, toggleValidAvailable } = props;\r\n\tconst inputComponentProps = _getInputProps(props);\r\n\r\n    return (\r\n        <div className=\"form form__container\">\r\n            <form className=\"form__sign-up\" onSubmit={(event) => toggleValidAvailable(formID, event)}>\r\n                <fieldset disabled={submitResponse}>\r\n                    <FormTitle>Регистрация в системе</FormTitle> \r\n                    <InputEmail \r\n\t\t\t\t\t\t\t\t\t\t\t\t{...inputComponentProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"\r\n                        name=\"email\"> \r\n                        Электронная почта \r\n                    </InputEmail>\r\n\r\n                    <InputPassword\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...inputComponentProps}\r\n                        required=\"required\"\r\n                        name=\"password\">\r\n                        Пароль\r\n                    </InputPassword>\r\n\r\n                    <InputPassword\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...inputComponentProps}\r\n                        required=\"required\"\r\n                        name=\"repeatPassword\">\r\n                        Повторите пароль\r\n                    </InputPassword>\r\n\r\n                    <FormSelect\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...inputComponentProps}\r\n                        required=\"required\"\r\n                        name=\"citizenship\">\r\n                        Гражданство\r\n                    </FormSelect>\r\n\r\n                    <FormTermOfUse\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...inputComponentProps}\r\n                        required=\"required\"\r\n                        name=\"termOfUse\">\r\n                        Соглашаюсь с <a href=\"#\" className=\"text-blue\">правилами и условиями сервиса</a>\r\n                    </FormTermOfUse>\r\n\r\n                    <FormSubmitButton formID={formID}> Зарегистрироваться </FormSubmitButton>\r\n                    <FormAdditional togglePopupForms={togglePopupForms}>Войти</FormAdditional>\r\n                    \r\n                    {submitResponse && <Loader />}\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { FormSignin, FormSignup };","import React, { Component } from 'react';\r\nimport { FormSignin, FormSignup } from './Forms';\r\nimport errorMessage from '../../text/text.json';\r\nimport cx from 'classnames';\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            submitResponse: false,\r\n            formSwitch: true,\r\n            formsData: {\r\n                signin: {\r\n                    isValidAvailable: false,\r\n                    email: {value: \"\", valueInvalid: \"\"},\r\n                    password: {value: \"\", valueInvalid: \"\"}   \r\n                },\r\n                signup: {\r\n                    isValidAvailable: false,\r\n                    email: { value: \"\", valueInvalid: \"\"} ,\r\n                    password: { value: \"\", valueInvalid: \"\"} ,\r\n                    repeatPassword: { value: \"\", valueInvalid: \"\" },\r\n                    citizenship: {value: \"\", valueInvalid: \"\"},\r\n                    termOfUse: {value: false, valueInvalid: \"\"}\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    handleInputChange = (id, element, event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const thisFormsData = this.state.formsData;\r\n        const formData = thisFormsData[id];\r\n        const { isValidAvailable } = formData;\r\n        const name = element.name;\r\n        const valueInvalid = isValidAvailable ? this.validHandler(name, value) : '';\r\n    \r\n        this.setState({\r\n            ...this.state,\r\n            formsData: {\r\n                ...thisFormsData,\r\n                [id]: {\r\n                    ...formData,\r\n                    [element.name]: {\r\n                        value: value,\r\n                        valueInvalid: valueInvalid\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }  \r\n\r\n    toggleValidAvailable = (id, event) => {\r\n        // It allows check the inputs changes in real time, when user clicked on submit button\r\n        event.preventDefault();\r\n        const thisFormsData = this.state.formsData;\r\n\r\n        this.setState({\r\n            formsData: {\r\n                ...thisFormsData,\r\n                [id]: {\r\n                    ...thisFormsData[id],\r\n                    isValidAvailable: true\r\n                }\r\n            }\r\n        }, () => { this.onSubmitValidThisForm(id) });\r\n    }\r\n\r\n    onSubmitValidThisForm = (id) => {\r\n        // The function replaces inputInvalid message (erros)\r\n        const formsData = this.state.formsData;\r\n        const formData = formsData[id];\r\n        const validedData = {};\r\n        \r\n        // It makes a new object with updated inputInvalid (errors)\r\n        Object.entries(formData).forEach(([name, element]) => {\r\n            if (name === 'isValidAvailable') {\r\n                validedData[name] = element;\r\n            } else {\r\n                element.valueInvalid = this.validHandler(name, element.value);\r\n                Object.assign(validedData, { [name]: element });\r\n            }\r\n        });\r\n\r\n        // It replaces previous formsData[id] with new\r\n        this.setState({\r\n            formsData: {\r\n                ...formsData,\r\n                [id]: validedData\r\n            }\r\n        }, () => {this.fakeSubmitLoading(id)});\r\n    }\r\n\r\n    fakeSubmitLoading = (id) => {\r\n        const formData = this.state.formsData[id];\r\n\r\n        const canIChangeSubmitResponseState = Object.entries(formData).filter(([name, element]) => {\r\n            if (typeof element !== 'object' || name === \"citizenship\") {\r\n                return false;\r\n            } \r\n\r\n            return element.valueInvalid;\r\n        });\r\n\r\n        if (canIChangeSubmitResponseState.length === 0) {\r\n            this.setState({\r\n                submitResponse: true\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        submitResponse: false\r\n                    });\r\n                }, 2500);\r\n            });\r\n        }\r\n    }\r\n\r\n    validHandler = (name, value) => {\r\n        // General valid handler\r\n        switch(name) {\r\n            case \"email\":\r\n                return this.validEmail(value);\r\n            case \"password\":\r\n            default:\r\n                return this.validPassword(value);\r\n        }\r\n    }\r\n\r\n    validEmail = (value) => {\r\n        // Valid function\r\n        const emailValidRegExp = /\\S+@\\S+\\.\\S+/;\r\n\r\n        if (value.length === 0) {\r\n            return errorMessage.email.empty;\r\n        } else if (!emailValidRegExp.test(value)) {\r\n            return errorMessage.email.invalid;\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    validPassword = (value) => {\r\n        // Valid function\r\n        return value.length === 0 ? errorMessage.password.empty : '';\r\n    }\r\n\r\n    getFormElementValues = (id, name) => {\r\n        // It transfers a value of input to functional component \r\n        const formData = this.state.formsData[id] ? this.state.formsData[id] : {};\r\n        return formData.hasOwnProperty(name) ? formData[name] : '';\r\n    }\r\n\r\n    togglePopupForms = (event) => {\r\n        // It changes the popups\r\n        event.preventDefault();\r\n        this.setState({\r\n            formSwitch: !this.state.formSwitch\r\n        });\r\n\t\t}\r\n\t\t\r\n\t\t_getPropsForForm = () => {\r\n\t\t\tconst { \r\n\t\t\t\thandleInputChange,\r\n\t\t\t\tgetFormElementValues,\r\n\t\t\t\ttogglePopupForms,\r\n\t\t\t\ttoggleValidAvailable\r\n\t\t\t} = this;\r\n\r\n\t\t\tconst { submitResponse } = this.state;\r\n\r\n\t\t\treturn ({\r\n\t\t\t\thandleInputChange,\r\n\t\t\t\tgetFormElementValues,\r\n\t\t\t\ttogglePopupForms,\r\n\t\t\t\ttoggleValidAvailable,\r\n\t\t\t\tsubmitResponse\r\n\t\t\t});\r\n\r\n\r\n\t\t}\r\n\r\n    render() {\r\n        const { formSwitch } = this.state;\r\n\t\t\t\tconst formProps = this._getPropsForForm();\r\n\t\t\t\tconst form = formSwitch ? <FormSignup \r\n\t\t\t\t\t\t\tformID=\"signup\"\r\n\t\t\t\t\t\t\t{...formProps}\r\n\t\t\t\t\t/> : <FormSignin \r\n\t\t\t\t\t\t\tformID=\"signin\"\r\n\t\t\t\t\t\t\t{...formProps}\r\n\t\t\t\t\t/>;\r\n        return (\r\n            <div className=\"wrapper\">\r\n                { form }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Form from \"./Form\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"popup popup__container\">\r\n        <Form />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/App\";\r\n\r\nimport \"./assets/styles/main.scss\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}